<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Prediction Result</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
        /* --- your CSS exactly as it is --- */
        body {
            overflow-x: hidden;
            background: #121212;
            color: #FFFFFF;
            font-family: 'Segoe UI', Arial, sans-serif;
            min-height: 100vh;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .container {
            width: 100%;
            max-width: 800px;
            margin-top: 30px;
            background: black;
            border-radius: 18px;
            box-shadow:
                0 0 32px 2px #7a40f0bb,
                0 6px 24px #0008;
            padding: 25px;
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            overflow: hidden;
            right: 0px;
        }

        .container::before {
            content: "";
            position: absolute;
            inset: -16px;
            z-index: 0;
            border-radius: 40px;
            background: radial-gradient(circle at 70% 30%, #7a40f033 0%, #7a40f000 60%);
            pointer-events: none;
            animation: neonGlow 3s ease-in-out infinite alternate;
        }

        @keyframes neonGlow {
            0% {
                box-shadow: 0 0 40px 20px #7a40f033;
            }

            100% {
                box-shadow: 0 0 50px 30px #9c63ff55;
            }
        }

        h1 {
            letter-spacing: 1px;
            margin-bottom: 32px;
            font-weight: 700;
            color: #d4c6f7;
            text-align: center;
            position: relative;
            z-index: 1;
        }

        .flashcards-row1 {
            display: flex;
            gap: 30px;
            /* thoda zyada gap between cards */
            justify-content: center;
            margin-bottom: 30px;
            /* space niche ke liye */
        }

        .flashcards-row1 .flashcard {
            flex: 1;
            min-width: 160px;
            /* thoda bada minimum */
            max-width: 300px;
            /* equal size maintain karega */
            text-align: center;
            /* andar ka text center aligned */
        }

        .flashcards-row2 .flashcard {
            width: 100%;
            max-width: 450px;
            /* status ka card bada aur center */
            text-align: center;
            margin-bottom: 30px;
        }



        .flashcards-row2 .flashcard {
            min-width: 350px;
            max-width: 100%;
        }

        .flashcard {
            border: 1px solid rgba(255, 255, 255, 0.3);
            background: black;
            color: white;
            margin-top: 10px;
            margin-right: 5px;
            font-size: 16px;
            border-radius: 12px;
            box-shadow: 0 4px 12px 0px rgba(75, 125, 255, 0.6);
            min-height: 75px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
            padding: 50px 25px;
            opacity: 0;
            transform: translateY(35px) scale(0.95);
            transition:
                opacity 0.7s cubic-bezier(.45, .05, .55, 1),
                transform 0.7s cubic-bezier(.5, -0.2, .5, 1.5),
                box-shadow 0.3s ease,
                transform 0.3s ease;
            cursor: default;
        }

        .flashcard.shown {
            opacity: 1;
            transform: translateY(0) scale(1);
        }

        .flashcard:hover {
            transform: translateY(-10px) scale(1.03);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.5);
            cursor: pointer;
        }

        .graph,
        .dollar,
        .arrow,
        .money {
            opacity: 0;
            transform: translateY(40px) scale(0.9);
            transition: opacity 0.6s ease, transform 0.6s ease;
        }

        .graph.shown,
        .dollar.shown,
        .arrow.shown,
        .money.shown {
            opacity: 1;
            transform: translateY(0) scale(1);
        }

        .dollar {
            position: absolute;
            top: 65%;
            left: 80%;
            height: 220px;
            width: 220px;
            background-image: url('/images/dolar.png');
            background-size: contain;
            background-repeat: no-repeat;
            z-index: 1;
        }

        .money {
            position: absolute;
            top: 10%;
            left: 90%;
            height: 200px;
            width: 300px;
            background-image: url('/images/money.png');
            background-size: contain;
            background-repeat: no-repeat;
            pointer-events: none;
            z-index: 1;

            /* animation setup */
            transform: translateX(300px) rotate(0deg);
            /* start: bahar se + no rotation */
            animation: rollIn 2s ease-out forwards;
        }

        /* keyframes for rolling effect */
        @keyframes rollIn {
            0% {
                transform: translateX(300px) rotate(0deg);
                /* bahar right side se */
                opacity: 0;
            }

            100% {
                transform: translateX(0) rotate(-360deg);
                /* apni jagah pe + roll complete */
            }
        }

        .arrow {
            position: absolute;
            top: 70%;
            left: 10px;
            height: 200px;
            width: 300px;
            background-image: url('/images/arrow.png');
            background-size: contain;
            background-repeat: no-repeat;
            pointer-events: none;
            z-index: 1;
        }

        /* .graph {
            position: absolute;
            top: 65%;
            right: 80%;
            height: 150px;
            width: 220px;
            background-image: url('/images/generated-image (5).png');
            background-size: contain;
            background-repeat: no-repeat;
            pointer-events: none;
            z-index: 1;
        } */

        .label {
            font-size: 1.05em;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
            color: #B0B3BC;
        }

        .value {
            font-size: 1.3em;
            font-weight: 600;
            color: #FFF;
            letter-spacing: 0.5px;
        }

        .status {
            color: #60ffb8;
            font-size: 1em;
            margin-top: 0;
            font-weight: 500;
        }

        .dashboard-link {
            margin-top: 24px;
            display: inline-block;
            background: #191A1D;
            color: #FFF;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1em;
            padding: 12px 34px;
            border: 2px solid #fff;
            border-radius: 8px;
            transition: background 0.25s, color 0.25s, box-shadow 0.25s;
            box-shadow: 0 2px 8px #0003;
            position: relative;
            z-index: 1;
        }

        .dashboard-link:hover,
        .dashboard-link:focus {
            background: #fff;
            color: #191A1D;
            box-shadow: 0 5px 24px #0ff5;
        }

        @media (max-width: 700px) {
            .flashcards-row1 {
                flex-wrap: wrap;
            }

            .flashcards-row1 .flashcard {
                min-width: 45%;
                flex: 1 1 45%;
            }

            .flashcards-row2 .flashcard {
                min-width: 98%;
            }
        }
    </style>
</head>

<body>
    <div class="graph"></div>
    <div class="dollar"></div>
    <div class="bank"></div>
    <div class="arrow"></div>
    <div class="money"></div>
    <div class="container">
        <h1>Prediction Result</h1>
        <div class="flashcards-row1">
            <div class="flashcard">
                <div class="label">Predicted Baseline:</div>
                <div class="value">
                    <%= predicted_baseline %>
                </div>
            </div>
            <div class="flashcard">
                <div class="label">Actual Expense:</div>
                <div class="value">
                    <%= actual_expense %>
                </div>
            </div>
            <div class="flashcard">
                <div class="label">Income:</div>
                <div class="value">
                    <%= income %>
                </div>
            </div>
        </div>
        <div class="flashcards-row2">
            <div class="flashcard">
                <div class="label">Status:</div>
                <div class="value status">
                    <%= status %>
                </div>
            </div>
        </div>
        <a class="dashboard-link" href="/dashboard">Go to Dashboard</a>
    </div>
    <div class="container" style="max-width:800px; margin-top:15px;">
        <div class="chart-container">
            <h2 style="color:#d4c6f7; text-align:center;">Expense Distribution</h2>
            <canvas id="expensePie"></canvas>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cardsRow1 = document.querySelectorAll(".flashcards-row1 .flashcard");
            const cardsRow2 = document.querySelectorAll(".flashcards-row2 .flashcard");
            const arrow = document.querySelector(".arrow");
            const otherImages = document.querySelectorAll(".graph, .dollar, .money");

            // Show row1 cards
            cardsRow1.forEach((card, idx) => {
                setTimeout(() => {
                    card.classList.add("shown");

                    if (idx === 2) {
                        setTimeout(() => arrow.classList.add("shown"), 200);
                        otherImages.forEach((img, i) => {
                            setTimeout(() => img.classList.add("shown"), 400 + i * 150);
                        });
                    }
                }, 400 + idx * 250);
            });

            // Show row2 cards
            cardsRow2.forEach((card, idx) => {
                setTimeout(() => card.classList.add("shown"), 400 + cardsRow1.length * 250 + idx * 350);
            });
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script id="breakdown-json" type="application/json"><%- JSON.stringify(breakdown || {}) %></script>
    <script>
        (function () {
            const bdEl = document.getElementById('breakdown-json');
            let bd = {};
            try { bd = JSON.parse(bdEl ? bdEl.textContent : '{}') || {}; } catch (_) { bd = {}; }
            const num = (v) => Number(v || 0);
            const data = {
                labels: ["House Rent", "Food", "Electricity", "Gas", "Water", "Misc"],
                datasets: [{
                    data: [
                        num(bd.house_rent),
                        num(bd.food_costs),
                        num(bd.electricity),
                        num(bd.gas),
                        num(bd.water),
                        num(bd.misc)
                    ],
                    backgroundColor: ['#3b82f6', '#ef4444', '#f59e0b', '#10b981', '#06b6d4', '#a78bfa'],
                    borderColor: '#1e293b',
                    borderWidth: 2
                }]
            };
            const ctx = document.getElementById('expensePie');
            if (ctx) {
                new Chart(ctx, { type: 'pie', data, options: { responsive: true, plugins: { legend: { position: 'bottom' } } } });
            }
        })();
    </script>
</body>

</html>